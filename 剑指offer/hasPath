class Solution {
public:
    bool IsPath(char* matrix, int rows, int cols, int i, int j, char* str, int index, bool* map)
    {
        if (index == strlen(str))
            return true;
        if (i < 0 || i >= rows || j < 0 || j >= cols)
            return false;
        int res = false;
        if (!map[i*cols + j] && matrix[i*cols + j] == str[index]){
            map[i*cols + j] = true;
            if(IsPath(matrix, rows, cols, i-1, j, str, index+1, map) || IsPath(matrix, rows, cols, i, j-1, str, index+1, map)\
                || IsPath(matrix, rows, cols, i, j+1, str, index+1, map) || IsPath(matrix, rows, cols, i+1, j, str, index+1, map))
                return true;
            map[i*cols + j] = false;
        }
        return false;
    }

    bool hasPath(char* matrix, int rows, int cols, char* str)
    {
        bool* map = new bool [rows*cols];
        for (int i = 0; i < rows*cols; ++i){
                map[i] = false;
        }

        for (int i = 0; i < rows; i++){
            for (int j = 0; j < cols; j++){
                if (IsPath(matrix, rows, cols, i, j, str, 0, map)){
                    delete []map;
                    return true;
                }
            }
        }
        delete []map;
        return false;
    }
};
