/*
class Solution {
public:
    
    int NumberOf1Between1AndN_Solution(int n)
    {
        map<char, int> mp;
        int result = 0;
        for(int i = 1; i <= n; i++){
            string str = to_string(i);
            string::iterator it;
            map<char, int> mp;
            for(char &e:str){
                if(mp.count(e) > 0)
                    mp[e]++;
                else 
                    mp[e] = 1;
            }
            result += mp.find('1')->second;
        }
        return result;
    }
};
*/
class Solution {
public:
    int NumberOf1Between1AndN_Solution(int n)
    {
        int ret = 0;
         for (long m = 1; m <= n; m *= 10)
             ret += (n/m + 8)/10 * m+(n/m%10 == 1 ? n%m+1:0);
         return ret;
    }
};
