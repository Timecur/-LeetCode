class Solution {
public:
    // Parameters:
    //        numbers:     an array of integers
    //        length:      the length of array numbers
    //        duplication: (Output) the duplicated number in the array number
    // Return value:       true if the input is valid, and there are some duplications in the array number
    //                     otherwise false
    bool duplicate(int numbers[], int length, int* duplication) {
        
        // 用 map 映射出现次数大于1的元素
        map<int , int> mp;
        for(int i = 0; i < length; i++){
            if(mp.count(numbers[i]) > 0)
                mp[numbers[i]]++;
            else
                mp[numbers[i]] = 1;
        }
        
        // 将出现多次元素插入set
        map<int, int>::iterator it;
        set<int> s;
        for(it = mp.begin(); it != mp.end(); it++){
            if(it->second > 1)
                s.insert(it->first);
        }
        if(!s.empty())
            *duplication = *(s.begin());
        return s.size();
    }
};


