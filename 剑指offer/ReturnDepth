class Solution {
public:
    int ReturnDepth(TreeNode* pRoot){
        if(!pRoot)
            return 0;
        
        int leftdeep = ReturnDepth(pRoot->left)+1;
        if(ReturnDepth(pRoot->left) == -1)
            return -1;
        int rightdeep = ReturnDepth(pRoot->right)+1;
        if(ReturnDepth(pRoot->right) == -1)
            return -1;
        if(abs(leftdeep-rightdeep) <= 1)
            return max(leftdeep, rightdeep);
        else
            return -1;
    }
    
    bool IsBalanced_Solution(TreeNode* pRoot) {
        if(!pRoot)
            return true;
        return ReturnDepth(pRoot) != -1;
    }
};
/*
if(pRoot->left || pRoot->right){
            int left = ReturnDepth(pRoot->left);
            int right = ReturnDepth(pRoot->right);
            if(abs(left - right) > 1)
                return false;
        }
        IsBalanced_Solution(pRoot->left);
        IsBalanced_Solution(pRoot->right);
*/
