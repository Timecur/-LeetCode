除自身以外数组的乘积
给定长度为 n 的整数数组 nums，其中 n > 1，返回输出数组 output ，其中 output[i] 等于 nums 中除 nums[i] 之外其余各元素的乘积。

示例:

输入: [1,2,3,4]
输出: [24,12,8,6]
说明: 请不要使用除法，且在 O(n) 时间复杂度内完成此题。

进阶：
你可以在常数空间复杂度内完成这个题目吗？（ 出于对空间复杂度分析的目的，输出数组不被视为额外空间。）

class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        // 上三角*下三角
        vector<int> res(nums.size(), 1);
/*
        // 超时
        for(int i = 0; i < nums.size(); i++){
            for(int j = 0; j < i; j++)
                res[i] *= nums[j];
            for(int k = i+1; k < nums.size(); k++)
                res[i] *= nums[k];
        }
*/      
        /*
            通过pre记录上次结果.
            上三角与下三角对称处理
        */
        /*
              1 2 3 4 
            1 1 2 3 4
            2 1 1 3 4
            3 1 2 1 4
            4 1 2 3 1
        */
        int pre = 1;
        for(int i = 0; i < nums.size(); i++){
            res[i] *= pre;
            pre *= nums[i];
        }
        pre = 1;
        for(int j = nums.size()-1; j >= 0; j--){
            res[j] *= pre;
            pre *= nums[j];
        }
        
        return res;
    }
};
