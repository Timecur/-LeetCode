class Solution {
public:
    int maxArea(vector<int>& height) {
        // 双指针， 较短向较长位置移动
        if(height.size() < 2) return 0;

        int l = 0;
        int r = height.size()-1;
        
        int res = 0;
        while(l < r){
            res = max(min(height[l], height[r])*(r-l), res);
            height[l] < height[r]?++l:--r;
        }
        
     return res;   
    }
};
    
    
    
/*
    // 暴力超时
    int maxArea(vector<int>& height) {
        if(height.size() < 2) return 0;
        
        vector<int> red(height.size()+5, 0);
        
        int res = 0;
        for(int i = 0; i < height.size(); i++){ 
            for(int j = 0; j < i; j++){
                red[j] = max(red[j], min(height[j], height[i])*(i-j));
                res = max(res, red[j]);
            }    
            
        }
        return res;
    }
*/
