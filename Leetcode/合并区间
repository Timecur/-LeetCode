class Solution {
public:
    /*
    static bool Comfunc(vector<int> v1, vector<int> v2){
        return v1[0] <= v2[0];
    }
    */
    
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        if(intervals.empty()) return intervals;
        
        // sort(intervals.begin(), intervals.end(), Comfunc);
        sort(intervals.begin(), intervals.end(), [](vector<int> v1, vector<int> v2){
            return v1[0] <= v2[0];
        });
        
        int beg = intervals[0][0];
        int end = intervals[0][1];
        vector<vector<int>> res;
        for(int i = 1; i < intervals.size(); i++){
            if(intervals[i][0] <= end){
                end = end >= intervals[i][1]?end:intervals[i][1];
            }
            else{
                res.push_back(vector<int>({beg,end}));
                beg = intervals[i][0];
                end = intervals[i][1];
            }
        }
        res.push_back(vector<int>({beg,end}));
        return res;
    }
};
